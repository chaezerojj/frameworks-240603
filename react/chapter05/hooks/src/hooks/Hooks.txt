Hooks

1. 훅스의 규칙
* 훅스 사용할 때 버그 또는 예기치 못한 동작 방지 위해 염두에 둬야 할 규칙들
1-1. 훅스는 컴포넌트의 영역 안에서만 작동함
- 리액트 컴포넌트 내부에서만 훅스 호출
- 훅스는 일반 자바스크립트가 아닌 리액트 패턴
1-2. 기능을 여러 훅으로 나누면 좋음
- JazzyNews 컴포넌트 예제의 경우, 구독 관련 모든 기능과 사운드 관련 모든 기능을
  각각 다른 효과에 넣음
- -> 코드 읽기엔 쉽지만 효과를 분리하면 다른 이점 가져갈 수 있음
1-3. 최상위 수준에서만 훅을 호출해야 함
- 리액트 함수의 최상위 수준에서만 훅 사용해야 함
- 조건문, 루프, 내장 함수 안에서 훅 사용 X
- 사용 불가 예시:
if (count > 5)  {
  const [checked, toggle] = useState(false);
  if (count > 5) {
    useEffect(() => {
      ...
    })
  }
}
- 리액트에서 조건을 사용하려면 훅 안에 if문 or 루프 or 다른 조건 내포시킬 수 있음
const [checked, toggle] = useState(
  count => (count < 5) ? undefined : 
)
useEffect(() => {
  if(count < 5) return
  ...
})